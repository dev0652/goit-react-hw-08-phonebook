{"version":3,"file":"static/js/669.c4ec4196.chunk.js","mappings":"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","sources":["components/AuthBody/AuthBody.styled.js","components/AuthBody/AuthBody.jsx","components/Forms/AuthDataForm/AuthDataForm.styled.js","components/Forms/SwitchForms/SwitchForms.jsx","components/Forms/AuthDataForm/AuthDataForm.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","pages/Register.jsx","styling/forms.js"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  width: 100vw;\n  height: 100vh;\n`;\n\nexport const BannerSide = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 5vh;\n\n  /* background-color: #660dd9; */\n\n  background-color: #6684ff;\n  background: linear-gradient(105.62deg, #524abe -7.88%, #6684ff 100%);\n\n  padding: 65px 12px 0;\n  overflow: hidden;\n  color: #fff;\n\n  width: 45%;\n  padding: 0 30px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const BannerTextWrapper = styled.div`\n  /* margin-top: 30vh; */\n`;\n\nexport const BannerText = styled.p`\n  font-size: 2rem;\n  text-align: center;\n  font-weight: bold;\n`;\n\nexport const BannerImage = styled.img`\n  max-width: 30vw;\n  max-width: 70%;\n`;\n\nexport const FormSide = styled.div`\n  width: 55%;\n\n  display: flex;\n  justify-content: center;\n  /* align-items: center; */\n`;\n\n// export const xxx = styled.div``;\n","import {\n  BannerImage,\n  BannerSide,\n  BannerText,\n  BannerTextWrapper,\n  FormSide,\n  Wrapper,\n} from './AuthBody.styled';\n\nimport logo from 'images/project.png';\n\nexport default function AuthBody({ children }) {\n  return (\n    <Wrapper>\n      <BannerSide>\n        <BannerTextWrapper>\n          <BannerText>Add and manage contacts.</BannerText>\n          <BannerText>From everywhere</BannerText>\n        </BannerTextWrapper>\n\n        {/* <img\n          src=\"https://mir-s3-cdn-cf.behance.net/project_modules/fs/aa8625109287767.5fd08439c7676.jpg\"\n          srcset=\"https://mir-s3-cdn-cf.behance.net/project_modules/disp/aa8625109287767.5fd08439c7676.jpg 600w, https://mir-s3-cdn-cf.behance.net/project_modules/max_1200/aa8625109287767.5fd08439c7676.jpg 1200w, https://mir-s3-cdn-cf.behance.net/project_modules/1400_opt_1/aa8625109287767.5fd08439c7676.jpg 1400w, https://mir-s3-cdn-cf.behance.net/project_modules/fs/aa8625109287767.5fd08439c7676.jpg 1920w, https://mir-s3-cdn-cf.behance.net/project_modules/2800_opt_1/aa8625109287767.5fd08439c7676.jpg 2800w\"\n          sizes=\"(max-width: 2800px) 100vw, 2800px\"\n          alt=\"UI Design 3D Illustration\"\n        /> */}\n\n        <BannerImage src={logo} alt=\"UI Design  Illustration\" />\n      </BannerSide>\n      <FormSide>{children}</FormSide>\n    </Wrapper>\n  );\n}\n","import { styled } from 'styled-components';\n\nexport const AuthFormContainer = styled.div`\n  margin-top: 30vh;\n`;\n\nexport const ButtonGroup = styled.div`\n  width: 100%;\n\n  display: flex;\n  flex-direction: column;\n\n  /* align-items: center; */\n\n  gap: 10px;\n`;\n\n// export const FormContainer = styled.div`\n//   width: 300px;\n\n//   padding: 60px;\n//   padding-top: 40px;\n//   align-self: flex-start;\n//   margin-top: 20vh;\n\n//   border-radius: ${({ theme }) => theme.borderRadius};\n\n//   --background-fallback: rgb(245, 245, 245);\n//   --gradient-start-color: rgba(240, 248, 255, 1);\n//   --gradient-end-color: rgba(245, 245, 245, 1);\n\n//   background: var(--background-fallback);\n//   background: linear-gradient(\n//     0deg,\n//     var(--gradient-start-color) 55%,\n//     var(--gradient-end-color) 100%\n//   );\n// `;\n","import { Link } from 'react-router-dom';\nimport { styled } from 'styled-components';\n\nconst SwitchFormsText = styled.p`\n  text-align: center;\n  font-size: 0.9rem;\n`;\nconst StyledLink = styled(Link)`\n  font-weight: 500;\n`;\n\nexport default function SwitchForms({ condition }) {\n  let message, linkTo, buttonText;\n\n  if (condition) {\n    message = 'Already have an account?';\n    linkTo = '/login';\n    buttonText = 'Sign in';\n  } else {\n    message = \"Don't have an account yet?\";\n    linkTo = '/register';\n    buttonText = 'Sign up';\n  }\n\n  return (\n    <SwitchFormsText>\n      {message} <StyledLink to={linkTo}>{buttonText}</StyledLink>\n    </SwitchFormsText>\n  );\n}\n","import { useDispatch } from 'react-redux';\n\nimport { login, register } from 'redux/auth/operations';\n\nimport { AccentedButton as SubmitButton } from 'styling/buttons';\nimport { FieldsWrapper, FormWrapper, TextField } from 'styling/forms';\nimport { AuthFormContainer, ButtonGroup } from './AuthDataForm.styled';\nimport { toast } from 'react-hot-toast';\nimport SwitchForms from '../SwitchForms/SwitchForms';\nimport Section from 'components/Section/Section';\n\n// ################################################\n\nexport default function AuthDataForm({ formType }) {\n  const dispatch = useDispatch();\n\n  const isSignUp = formType === 'register';\n  let buttonText, messageText, operation, emailDefaultValue, passDefaultValue;\n\n  if (formType === 'login') {\n    buttonText = 'Sign in';\n    messageText = 'Login successful';\n    operation = login;\n    emailDefaultValue = 'dev0652@mail.au';\n    passDefaultValue = '1234567';\n  }\n\n  if (isSignUp) {\n    buttonText = 'Create an account';\n    messageText = 'Registration successful';\n    operation = register;\n    emailDefaultValue = '';\n    passDefaultValue = '';\n  }\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const form = event.currentTarget;\n\n    const credentials = {\n      email: form.elements.email.value,\n      password: form.elements.password.value,\n    };\n\n    if (isSignUp) credentials.name = form.elements.name.value;\n\n    dispatch(operation(credentials))\n      .then(toast.success(messageText))\n      .catch(er => toast.error(er.message));\n\n    form.reset();\n    // toggleModal();\n  };\n\n  return (\n    <AuthFormContainer>\n      <Section title={buttonText}>\n        <FormWrapper onSubmit={handleSubmit}>\n          <FieldsWrapper>\n            {/* Name */}\n            {isSignUp && (\n              <TextField type=\"text\" name=\"name\" placeholder=\"Name\" required />\n            )}\n            {/* Email */}\n            <TextField\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Email\"\n              defaultValue={emailDefaultValue}\n              required\n            />\n            {/* Pass */}\n            <TextField\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              defaultValue={passDefaultValue}\n              pattern=\"(?=.*).{7,}\"\n              title=\"Password must be at least 7 characters long\"\n              required\n            />\n          </FieldsWrapper>\n\n          <ButtonGroup>\n            <SubmitButton type=\"submit\">{buttonText}</SubmitButton>\n\n            <SwitchForms condition={isSignUp} />\n          </ButtonGroup>\n        </FormWrapper>\n      </Section>\n    </AuthFormContainer>\n  );\n}\n","import { styled } from 'styled-components';\n\nexport const Wrapper = styled.div`\n  /* margin-bottom: 10px; */\n  display: flex;\n  /* align-items: center; */\n\n  flex-direction: column;\n  gap: 30px;\n`;\n\nexport const Title = styled.h2`\n  font-size: 1.6rem;\n  color: ${({ theme }) => theme.colors.accentDark};\n  text-align: ${({ align = 'center' }) => align};\n`;\n","import PropTypes from 'prop-types';\nimport { Title, Wrapper } from './Section.styled';\n\nexport default function Section({ title, children }) {\n  return (\n    <Wrapper>\n      <Title>{title}</Title>\n      {children}\n    </Wrapper>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import { Helmet } from 'react-helmet-async';\n// import { useState } from 'react';\n\n// import Modal from 'components/Modal';\n// import Section from 'components/Section';\nimport AuthDataForm from 'components/Forms/AuthDataForm';\nimport AuthBody from 'components/AuthBody/AuthBody';\n\nexport default function Register() {\n  return (\n    <>\n      <Helmet>\n        <title>Register</title>\n        <meta\n          name=\"description\"\n          content=\"Register or log in to see your personalized items\"\n        />\n      </Helmet>\n\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <AuthBody>\n          <AuthDataForm formType=\"register\" />\n        </AuthBody>\n      </div>\n    </>\n  );\n}\n","import { styled } from 'styled-components';\nimport { theme } from 'styling/theme';\n\nexport const TextField = styled.input`\n  padding: 2px 25px 0;\n  border-radius: ${theme.borderRadius};\n  font-size: 1.1rem;\n  line-height: 2;\n  /* background-color: white; */\n\n  &::placeholder {\n    color: Silver;\n  }\n`;\n\nexport const FormWrapper = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n`;\n\nexport const FieldsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n`;\n"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","BannerSide","_templateObject2","BannerTextWrapper","_templateObject3","BannerText","_templateObject4","BannerImage","_templateObject5","FormSide","_templateObject6","AuthBody","_ref","children","_jsxs","_jsx","src","logo","alt","AuthFormContainer","ButtonGroup","SwitchFormsText","StyledLink","Link","SwitchForms","message","linkTo","buttonText","condition","to","AuthDataForm","messageText","operation","emailDefaultValue","passDefaultValue","formType","dispatch","useDispatch","isSignUp","login","register","Section","title","FormWrapper","onSubmit","event","preventDefault","form","currentTarget","credentials","email","elements","value","password","name","then","toast","catch","er","reset","FieldsWrapper","TextField","type","placeholder","required","defaultValue","pattern","SubmitButton","Title","theme","colors","accentDark","_ref2","_ref2$align","align","Register","_Fragment","Helmet","content","style","display","justifyContent","alignItems"],"sourceRoot":""}