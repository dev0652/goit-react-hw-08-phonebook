{"version":3,"file":"static/js/96.85ba6e54.chunk.js","mappings":"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","sources":["components/Section/Section.styled.js","components/Section/Section.jsx","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Error/Error.styled.js","components/Error/Error.jsx","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","components/Contacts/Contacts.styled.js","components/Card/Card.styled.js","components/Forms/ContactDataForm/ContactDataForm.jsx","components/Card/Card.jsx","components/Prompt/Prompt.styled.js","components/Prompt/Prompt.jsx","components/Contacts/Contacts.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const Wrapper = styled.div`\n  /* margin-bottom: 10px; */\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nexport const Title = styled.h2`\n  color: ${({ theme }) => theme.colors.accentDark};\n`;\n","import PropTypes from 'prop-types';\nimport { Title, Wrapper } from './Section.styled';\n\nexport default function Section({ title, children }) {\n  return (\n    <Wrapper>\n      <Title>{title}</Title>\n      {children}\n    </Wrapper>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import { styled } from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n\n  overflow-y: auto;\n  padding-right: 20px;\n`;\n\nexport const ListItem = styled.li`\n  width: 100%;\n  display: flex;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 3px;\n`;\nexport const Name = styled.p``;\n\nexport const ContactLink = styled.a`\n  flex-grow: 1;\n  color: black;\n  font-size: 1.1rem;\n  text-decoration: none;\n  padding: 10px 20px;\n  border-radius: ${({ theme }) => theme.borderRadius};\n\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n\n  &:hover,\n  &:focus {\n    color: ${({ theme }) => theme.colors.highlightedText};\n    background-color: #4285f4;\n    font-weight: 500;\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/selectors';\n\nimport { ContactLink, List, ListItem } from './ContactsList.styled';\n\nimport { setSelectedContactId } from 'redux/contacts/slice';\n\n// ################################################\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n\n  // If filtered, display only contacts matching the filter\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  // Sort contacts in alphabetical order\n  const sortedContacts = [...visibleContacts].sort((a, b) =>\n    a.name.localeCompare(b.name)\n  );\n\n  const handleContactClick = event => {\n    event.preventDefault();\n    dispatch(setSelectedContactId(event.target.id));\n  };\n\n  return (\n    <List>\n      {sortedContacts.map(({ id, name, phone }) => (\n        <ListItem key={id}>\n          <ContactLink href=\"\" onClick={handleContactClick} id={id}>\n            {name}\n          </ContactLink>\n        </ListItem>\n      ))}\n    </List>\n  );\n}\n","import { styled } from 'styled-components';\n\nimport { TextField as BaseTextField } from 'styling/forms';\n\nexport const TextField = styled(BaseTextField)`\n  width: 100%;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { updateFilter } from 'redux/filter/slice';\nimport { selectContacts, selectFilter } from 'redux/selectors';\n\nimport { TextField } from './Filter.styled';\nimport { useEffect } from 'react';\n\nexport default function Filter() {\n  const { items } = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const textField = document.querySelector('#searchBox');\n\n    if (!textField) return;\n\n    if (items.length === 0) {\n      textField.setAttribute('disabled', '');\n    }\n\n    if (items.length > 0) {\n      textField.removeAttribute('disabled');\n    }\n  }, [items.length]);\n\n  const handleChange = event => {\n    const filter = event.target.value;\n    const normalizedFilter = filter.toLowerCase().trim();\n\n    dispatch(updateFilter(normalizedFilter));\n  };\n\n  const getMessage = () => {\n    if (items.length === 0) return 'Phonebook is empty';\n    if (items.length === 1) return 'Not enough contacts to search in';\n\n    return `Search ${items.length} contacts`;\n  };\n\n  return (\n    <TextField\n      type=\"text\"\n      value={filter}\n      onChange={handleChange}\n      placeholder={getMessage()}\n      id=\"searchBox\"\n    />\n  );\n}\n","import { styled } from 'styled-components';\nimport { RxCrossCircled } from 'react-icons/rx';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  align-items: center;\n  /* color: IndianRed; */\n  color: silver;\n\n  margin-top: 20vh;\n`;\n\nexport const Text = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Icon = styled(RxCrossCircled)`\n  --size: 5rem;\n  height: var(--size);\n  width: var(--size);\n`;\n\nexport const Message = styled.p`\n  font-size: 1.5rem;\n  text-align: center;\n`;\n","import { Icon, Message, Text, Wrapper } from './Error.styled';\n\nexport default function Error() {\n  return (\n    <Wrapper>\n      <Icon />\n      <Text>\n        <Message>Something went wrong</Message>\n        <Message>Try reloading the page or check back later</Message>\n      </Text>\n    </Wrapper>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n  cursor: cell;\n`;\n\nexport const ModalContent = styled.div`\n  cursor: auto;\n\n  width: 300px;\n  /* background-color: #fff; */\n  padding: 60px;\n  padding-top: 40px;\n  align-self: flex-start;\n  margin-top: 20vh;\n\n  border-radius: ${({ theme }) => theme.borderRadius};\n\n  --background-fallback: rgb(245, 245, 245);\n  --gradient-start-color: rgba(240, 248, 255, 1);\n  --gradient-end-color: rgba(245, 245, 245, 1);\n\n  background: var(--background-fallback);\n  background: linear-gradient(\n    0deg,\n    var(--gradient-start-color) 55%,\n    var(--gradient-end-color) 100%\n  );\n`;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nimport { Overlay, ModalContent } from './Modal.styled';\n\n// #######################################\n\nconst modalRoot = document.querySelector('#modal-root');\n\n// #######################################\n\nexport default function Modal({ onClose, children }) {\n  //\n  useEffect(() => {\n    const handleKeydown = event => {\n      if (event.code === 'Escape') onClose();\n    };\n\n    window.addEventListener('keydown', handleKeydown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeydown);\n    };\n  });\n\n  const handleBackdropClick = event => {\n    if (event.target === event.currentTarget) onClose();\n  };\n\n  return createPortal(\n    <Overlay onClick={handleBackdropClick}>\n      <ModalContent>{children}</ModalContent>\n    </Overlay>,\n    modalRoot\n  );\n}\n\n// ####### PropTypes ######################\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n};\n","import { AccentedIconButton } from 'styling/buttons';\n\nimport { styled } from 'styled-components';\nimport { HiPlus, HiChevronDoubleRight } from 'react-icons/hi';\n\n// Body height adjust to compensate for positioned header height\nconst header = document.querySelector('.header');\nconst { height: pageHeaderHeight } = header.getBoundingClientRect();\nconst subtractedValue = `${pageHeaderHeight}px`;\n\nexport const PageWrapper = styled.div`\n  display: flex;\n  /* height: 100vh; */\n  height: calc(100vh - ${subtractedValue});\n`;\n\nexport const Sidebar = styled.div`\n  padding: 25px;\n  max-width: 400px;\n\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n  flex-grow: 1;\n\n  --background-fallback: rgb(245, 245, 245);\n  --gradient-start-color: rgba(240, 248, 255, 1);\n  --gradient-end-color: rgba(245, 245, 245, 1);\n\n  background: var(--background-fallback);\n  background: linear-gradient(\n    0deg,\n    var(--gradient-start-color) 55%,\n    var(--gradient-end-color) 100%\n  );\n`;\n\nexport const Right = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 25px;\n  padding-top: 50px;\n  flex-grow: 1;\n`;\n\nexport const ButtonsWrapper = styled.div`\n  display: flex;\n  /* flex-direction: column; */\n  gap: 10px;\n`;\n\nexport const NewContactIconButton = styled(AccentedIconButton)`\n  --size: 40px;\n`;\n\nexport const NewRandomContactButton = styled(AccentedIconButton)`\n  --size: 40px;\n`;\n\nexport const AddIcon = styled(HiPlus)`\n  --size: 70%;\n  height: var(--size);\n  width: var(--size);\n`;\n\nexport const AddRandomIcon = styled(HiChevronDoubleRight)`\n  --size: 70%;\n  height: var(--size);\n  width: var(--size);\n`;\n\nexport const Bar = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n","import { styled } from 'styled-components';\nimport { BaseButton, BaseIconButton } from 'styling/buttons';\nimport { BaseCardLink } from 'styling/links';\n\nimport { BsTrash3 } from 'react-icons/bs';\n\nexport const CardWrapper = styled.div`\n  border-radius: ${({ theme }) => theme.borderRadius};\n\n  padding: 20px 30px;\n  flex-grow: 1;\n  max-width: 400px;\n\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nexport const ImageWrapper = styled.div`\n  border-radius: ${({ theme }) => theme.borderRadius};\n  overflow: hidden;\n  width: 200px;\n\n  box-shadow: ${({ theme }) => theme.boxShadow};\n`;\n\nexport const Image = styled.img`\n  object-position: center;\n  object-fit: cover;\n`;\n\nexport const Meta = styled.div`\n  font-size: 1.5rem;\n  color: black;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const Name = styled.p`\n  font-size: 2rem;\n  font-weight: 600;\n`;\n\nexport const TelephoneLink = styled(BaseCardLink)``;\n\nexport const EmailLink = styled(BaseCardLink)``;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const EditButton = styled(BaseButton)``;\n\nexport const DeleteButton = styled(BaseButton)`\n  &:hover,\n  &:focus {\n    color: whitesmoke;\n    background-color: ${({ theme }) => theme.colors.warning};\n    font-weight: 500;\n  }\n`;\n\nexport const DeleteIcon = styled(BsTrash3)`\n  --size: 60%;\n  /* height: var(--size); */\n  width: var(--size);\n`;\n\nexport const DeleteIconButton = styled(BaseIconButton)`\n  --size: 40px;\n\n  color: ${({ theme }) => theme.colors.secondaryText};\n\n  &:hover,\n  &:focus {\n    color: ${({ theme }) => theme.colors.highlightedText};\n    background-color: ${({ theme }) => theme.colors.warning};\n    font-weight: 500;\n\n    & > ${DeleteIcon} {\n      transform: scale(1.1);\n    }\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport toast from 'react-hot-toast';\n\nimport { addContact, editContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/selectors';\n\nimport { AccentedButton as SubmitButton } from 'styling/buttons';\nimport { FieldsWrapper, FormWrapper, TextField } from 'styling/forms';\n\n// ################################################\n\nexport default function ContactDataForm({\n  formType,\n  editValues = null,\n  toggleModal,\n}) {\n  // const { prePopulatedName, prePopulatedNumber, prePopulatedEmail, id } = editValues;\n  const { prePopulatedName, prePopulatedNumber, id } = editValues;\n  // let buttonText, initNameValue, initNumberValue, initEmailValue, toastMessage, operation, args;\n  let buttonText, initNameValue, initNumberValue, toastMessage, operation, args;\n\n  const [name, setName] = useState(initNameValue);\n  const [number, setNumber] = useState(initNumberValue);\n  // const [email, setEmail] = useState(initEmailValue);\n\n  // const data = { name, number, email };\n  const data = { name, number };\n\n  const { items } = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  if (formType === 'add') {\n    buttonText = 'Add contact';\n    initNameValue = '';\n    initNumberValue = '';\n    // initEmailValue = '';\n    operation = addContact;\n    args = [data];\n  }\n\n  if (formType === 'edit') {\n    buttonText = 'Save changes';\n    initNameValue = prePopulatedName;\n    initNumberValue = prePopulatedNumber;\n    // initEmailValue = prePopulatedEmail;\n    operation = editContact;\n    args = [id, data];\n  }\n\n  if (formType === 'add') toastMessage = `Contact '${name}' was added`;\n  if (formType === 'edit') toastMessage = 'Changes have been saved';\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (formType === 'add') {\n      if (checkIfContactExists(name)) {\n        toast.error(`${name} is already a contact`);\n        return;\n      }\n    }\n\n    dispatch(operation(args))\n      .then(toast.success(toastMessage))\n      .catch(er => toast.error(er.message));\n\n    toggleModal();\n  };\n\n  // Check if contact with this name already exists\n  const checkIfContactExists = nameToCompare =>\n    items.find(\n      ({ name }) => name.toLowerCase() === nameToCompare.toLowerCase()\n    );\n\n  // Update input on change\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      // case 'email':\n      //   setEmail(value);\n      //   break;\n      default:\n        return;\n    }\n  };\n\n  return (\n    <FormWrapper onSubmit={handleSubmit}>\n      <FieldsWrapper>\n        <TextField\n          type=\"text\"\n          name=\"name\"\n          required\n          value={name}\n          onChange={handleChange}\n          placeholder=\"Name\"\n        />\n\n        <TextField\n          type=\"tel\"\n          name=\"number\"\n          required\n          value={number}\n          onChange={handleChange}\n          placeholder=\"Telephone\"\n        />\n\n        {/* <TextField\n          type=\"tel\"\n          name=\"email\"\n          value={email}\n          onChange={handleChange}\n          placeholder=\"Email\"\n        /> */}\n      </FieldsWrapper>\n\n      <SubmitButton type=\"submit\">{buttonText}</SubmitButton>\n    </FormWrapper>\n  );\n}\n","import { useState } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\n\nimport { faker } from '@faker-js/faker';\n\nimport Modal from 'components/Modal';\nimport Section from 'components/Section';\n\nimport {\n  EditButton,\n  DeleteButton,\n  ButtonWrapper,\n  CardWrapper,\n  Image,\n  ImageWrapper,\n  Meta,\n  Name,\n  TelephoneLink,\n  EmailLink,\n} from './Card.styled';\nimport { toast } from 'react-hot-toast';\nimport ContactDataForm from 'components/Forms/ContactDataForm/ContactDataForm';\n\n// ##################################################\n\nexport default function Card() {\n  const [showModal, setShowModal] = useState(false);\n  const toggleModal = () => setShowModal(!showModal);\n\n  const dispatch = useDispatch();\n\n  const { items, currentId } = useSelector(selectContacts);\n  const {\n    name,\n    number,\n    // email, image\n  } = items.find(item => item.id === currentId);\n\n  const email = faker.internet.exampleEmail();\n  const image = faker.image.avatar();\n  // const image = faker.image.people(640, 640, true);\n  // faker.image.people(width, height, randomize?: boolean = false)\n\n  const handleDelete = id => {\n    dispatch(deleteContact(id))\n      .then(toast.success('Contacts has been deleted'))\n      .catch(er => toast.error(er.message));\n  };\n\n  const values = { name, number, email, id: currentId };\n\n  return (\n    <CardWrapper>\n      <ImageWrapper>\n        <Image src={image} alt={name} width={640} />\n      </ImageWrapper>\n\n      <Meta>\n        <Name>{name}</Name>\n\n        <TelephoneLink href={`tel:+${number}`}>{number}</TelephoneLink>\n\n        <EmailLink href={`mailto:${email}`}>{email}</EmailLink>\n      </Meta>\n\n      <ButtonWrapper>\n        <EditButton type=\"button\" onClick={toggleModal}>\n          Edit\n        </EditButton>\n\n        <DeleteButton type=\"button\" onClick={() => handleDelete(currentId)}>\n          Delete\n        </DeleteButton>\n        {/* \n        <DeleteIconButton\n          onClick={() => handleDelete(currentId)}\n          aria-label=\"Delete contact\"\n        >\n          <DeleteIcon />\n        </DeleteIconButton> */}\n      </ButtonWrapper>\n\n      {showModal && (\n        <Modal onClose={toggleModal}>\n          <Section title=\"Edit Contact\">\n            <ContactDataForm\n              formType={'edit'}\n              editValues={values}\n              toggleModal={toggleModal}\n            />\n          </Section>\n        </Modal>\n      )}\n    </CardWrapper>\n  );\n}\n","import { styled } from 'styled-components';\nimport { CiCircleInfo as ReactIcon } from 'react-icons/ci';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  align-items: center;\n  color: silver;\n\n  margin-top: 20vh;\n`;\n\nexport const Text = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Icon = styled(ReactIcon)`\n  --size: 5rem;\n  height: var(--size);\n  width: var(--size);\n`;\n\nexport const Message = styled.p`\n  font-size: 1.5rem;\n  text-align: center;\n`;\n","import React from 'react';\nimport { Icon, Message, Text, Wrapper } from './Prompt.styled';\n\nexport default function Prompt() {\n  return (\n    <Wrapper>\n      <Icon />\n      <Text>\n        <Message>Select a contact to display here</Message>\n      </Text>\n    </Wrapper>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { faker } from '@faker-js/faker';\n\nimport Section from 'components/Section';\nimport ContactsList from 'components/ContactsList';\nimport Filter from 'components/Filter';\nimport Error from 'components/Error';\nimport Modal from 'components/Modal';\nimport {\n  AddIcon,\n  NewContactIconButton,\n  Right,\n  Sidebar,\n  Bar,\n  PageWrapper,\n  NewRandomContactButton,\n  ButtonsWrapper,\n  AddRandomIcon,\n} from './Contacts.styled';\n\nimport { selectContacts } from 'redux/selectors';\nimport { addContact, fetchContacts } from 'redux/contacts/operations';\n\nimport Card from 'components/Card/Card';\nimport Prompt from 'components/Prompt/Prompt';\nimport { toast } from 'react-hot-toast';\nimport ContactDataForm from 'components/Forms/ContactDataForm/ContactDataForm';\n\n// ################################################\n\nexport default function Contacts() {\n  const { items, isLoading, error, currentId } = useSelector(selectContacts);\n\n  const [showModal, setShowModal] = useState(false);\n  const toggleModal = () => setShowModal(!showModal);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n    //  const promise = dispatch(fetchContacts())\n    // return () => {\n    //   // `createAsyncThunk` attaches an `abort()` method to the promise\n    //   promise.abort()\n    // }\n  }, [dispatch]);\n\n  const addRandomContact = () => {\n    const randomContact = {\n      name: faker.person.fullName(),\n      number: faker.phone.number(),\n      // email: faker.internet.exampleEmail(),\n      // image: faker.internet.avatar(),\n    };\n\n    dispatch(addContact(randomContact))\n      .then(\n        toast.success(`${randomContact.name} has been added to the phonebook`)\n      )\n      .catch(er => toast.error(er.message));\n  };\n\n  return (\n    <PageWrapper>\n      <Sidebar>\n        <Section title=\"Contacts\">\n          <Bar>\n            <Filter />\n\n            <ButtonsWrapper>\n              <NewContactIconButton\n                type=\"button\"\n                onClick={toggleModal}\n                disabled={error}\n                aria-label=\"New contact\"\n              >\n                <AddIcon />\n              </NewContactIconButton>\n\n              <NewRandomContactButton\n                type=\"button\"\n                onClick={addRandomContact}\n                disabled={error}\n                aria-label=\"New random contact (for testing)\"\n              >\n                <AddRandomIcon />\n              </NewRandomContactButton>\n            </ButtonsWrapper>\n          </Bar>\n        </Section>\n\n        {items.length > 0 && <ContactsList />}\n      </Sidebar>\n\n      <Right>\n        {!isLoading && error && <Error />}\n        {!currentId && !error && <Prompt />}\n        {currentId && <Card />}\n      </Right>\n\n      {showModal && (\n        <Modal onClose={toggleModal}>\n          <Section title=\"New Contact\">\n            <ContactDataForm formType={'add'} toggleModal={toggleModal} />\n          </Section>\n        </Modal>\n      )}\n    </PageWrapper>\n  );\n}\n","import Contacts from 'components/Contacts';\nimport { Helmet } from 'react-helmet-async';\nimport { useSelector } from 'react-redux';\nimport { selectAuth } from 'redux/selectors';\n\nexport default function ContactsPage() {\n  const { isLoggedIn } = useSelector(selectAuth);\n\n  return (\n    <>\n      <Helmet>\n        <title>Contacts</title>\n        <meta name=\"description\" content=\"My contacts\" />\n      </Helmet>\n\n      {isLoggedIn && <Contacts />}\n    </>\n  );\n}\n"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","Title","_templateObject2","_ref","theme","colors","accentDark","Section","title","children","_jsxs","_jsx","List","ListItem","ContactLink","_templateObject3","_templateObject4","_templateObject5","borderRadius","_ref2","highlightedText","Contacts","dispatch","useDispatch","visibleContacts","useSelector","selectVisibleContacts","sortedContacts","_toConsumableArray","sort","a","b","name","localeCompare","handleContactClick","event","preventDefault","setSelectedContactId","target","id","map","phone","href","onClick","TextField","BaseTextField","Filter","items","selectContacts","filter","selectFilter","useEffect","textField","document","querySelector","length","setAttribute","removeAttribute","type","value","onChange","normalizedFilter","toLowerCase","trim","updateFilter","placeholder","concat","Text","Icon","RxCrossCircled","Message","Error","Overlay","ModalContent","modalRoot","Modal","onClose","handleKeydown","code","window","addEventListener","removeEventListener","createPortal","currentTarget","pageHeaderHeight","getBoundingClientRect","height","subtractedValue","PageWrapper","Sidebar","Right","ButtonsWrapper","NewContactIconButton","AccentedIconButton","NewRandomContactButton","_templateObject6","AddIcon","HiPlus","_templateObject7","AddRandomIcon","HiChevronDoubleRight","_templateObject8","Bar","_templateObject9","CardWrapper","ImageWrapper","_ref3","boxShadow","Image","Meta","Name","TelephoneLink","BaseCardLink","EmailLink","ButtonWrapper","EditButton","BaseButton","DeleteButton","_templateObject10","_ref4","warning","DeleteIcon","BsTrash3","_templateObject11","BaseIconButton","_templateObject12","_ref5","secondaryText","_ref6","_ref7","ContactDataForm","buttonText","initNameValue","initNumberValue","toastMessage","operation","args","formType","_ref$editValues","editValues","toggleModal","prePopulatedName","prePopulatedNumber","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","data","addContact","editContact","checkIfContactExists","nameToCompare","find","handleChange","_event$currentTarget","FormWrapper","onSubmit","toast","then","catch","er","message","FieldsWrapper","required","SubmitButton","Card","showModal","setShowModal","_useSelector","currentId","_items$find","item","email","faker","image","values","src","alt","width","deleteContact","ReactIcon","Prompt","isLoading","error","fetchContacts","disabled","randomContact","ContactsList","ContactsPage","isLoggedIn","selectAuth","_Fragment","Helmet","content"],"sourceRoot":""}